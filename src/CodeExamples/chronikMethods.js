import {
  getBlockHashHelper,
  getTokenDetailsHelper,
  getTxDetailsHelper,
  getTxHistoryHelper,
  getUtxosHelper,
} from "../utilities/helpers";
export const chronikMethods = [
  {
    key: "1",
    name: "Get Block",
    details: "const block = await chronik.block('')",
    example: "000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f",
    description: "Accepts a block hash and returns block details",
    inputLabel: "Block Hash",
    src: null,
    method: getBlockHashHelper,
  },
  {
    key: "2",
    name: "Get Tx Details",
    details: " txDetails = await chronik.tx(txid);",
    example: "0f3c3908a2ddec8dea91d2fe1f77295bbbb158af869bff345d44ae800f0a5498",
    description: "Accepts a txid and returns SLP tx data.",
    inputLabel: "eToken or XEC txid",
    src: null,
    method: getTxDetailsHelper,
  },
  {
    key: "3",
    name: "Get Tx History",
    details: `const history = await chronik.script("p2pk", GENESIS_PK).history(/*page=*/ 0, /*page_size=*/ 10)`,
    example: "95E79F51D4260BC0DC3BA7FB77C7BE92D0FBDD1D",
    description:
      "Get first page of tx history of the Genesis pubkey, most recent first.",
    inputLabel: "Tx History",
    src: null,
    method: getTxHistoryHelper,
  },
  {
    key: "4",
    name: "Get Utxos",
    details: "utxos = await chronik.script('p2pkh', publickey).utxos()",
    example: "95E79F51D4260BC0DC3BA7FB77C7BE92D0FBDD1D",
    description: "Get utxos associated with a pubkey",
    inputLabel: " Genesis Pubkey",
    src: null,
    method: getUtxosHelper,
  },
  {
    key: "5",
    name: "Get Token Details",
    details: "const tokenDetails = await chronik.token('')",
    example: "61302a235634ac9d8e227fd5d456d3cea5fa9d474b1d4d107664e03cbaab7405",
    description: "Accepts an eToken ID and returns the token details",
    inputLabel: "eToken ID",
    src: null,
    method: getTokenDetailsHelper,
  },
];
